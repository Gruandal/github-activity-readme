name: Multi-Stage Deployment Pipeline

on:
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install & Build
        run: |
          npm ci
          npm run build
          zip -r build.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip


  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: dev
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Create Dev Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "üöÄ Deploying to DEV environment..."
          gh release create "$TAG" build.zip --notes "$NOTE" || echo "‚ö†Ô∏è Release already exists, skipping."


  deploy-staging:
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: staging
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Create Staging Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "üß™ Deploying to STAGING environment..."
          gh release create "$TAG" build.zip --notes "$NOTE (Pre-production testing)" || echo "‚ö†Ô∏è Release already exists, skipping."


  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Create Production Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "üéâ Deploying to PRODUCTION environment..."
          gh release create "$TAG" build.zip --notes "$NOTE (Final production release)" || echo "‚ö†Ô∏è Release already exists, skipping."
