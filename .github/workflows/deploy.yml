name: Multi-Stage Deployment Pipeline

on:
  workflow_dispatch:

permissions:
  contents: write  # 允許建立與刪除 release、tag

jobs:
  # === 1️⃣ Build Job ===
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install & Build
        run: |
          npm ci
          npm run build
          zip -r build.zip dist/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  # === 2️⃣ Deploy to Dev ===
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: dev
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Deploy to Dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "🚀 Deploying to DEV environment..."
          # 若有舊 release/tag 會自動刪除再建立
          gh release delete "dev-v1.0" -y || true
          git push origin :refs/tags/dev-v1.0 || true
          gh release create "dev-v1.0" build.zip --notes "${NOTE:-Development build}"

  # === 3️⃣ Deploy to Staging ===
  deploy-staging:
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: staging
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Deploy to Staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "🧪 Deploying to STAGING environment..."
          gh release delete "staging-v1.0" -y || true
          git push origin :refs/tags/staging-v1.0 || true
          gh release create "staging-v1.0" build.zip --notes "${NOTE:-Testing pre-production release}"

  # === 4️⃣ Deploy to Production ===
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Deploy to Production
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "🎉 Deploying to PRODUCTION environment..."
          gh release delete "prod-v1.0" -y || true
          git push origin :refs/tags/prod-v1.0 || true
          gh release create "prod-v1.0" build.zip --notes "${NOTE:-Final production release}"
