name: Multi-Stage Deployment Pipeline

on:
  workflow_dispatch:

permissions:
  contents: write  # ÂÖÅË®±Âª∫Á´ãËàáÂà™Èô§ release„ÄÅtag

jobs:
  # === 1Ô∏è‚É£ Build Job ===
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install & Build
        run: |
          npm ci
          npm run build
          zip -r build.zip dist/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  # === 2Ô∏è‚É£ Deploy to Dev ===
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: dev
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release Dev Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "üöÄ Deploying to DEV environment..."
          if [ -z "$TAG" ]; then echo "‚ùå Missing BUILD_TAG in environment vars"; exit 1; fi
          gh release delete "$TAG" -y || true
          git push origin :refs/tags/"$TAG" || true
          gh release create "$TAG" build.zip --notes "$NOTE (Development build)"

  # === 3Ô∏è‚É£ Deploy to Staging ===
  deploy-staging:
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: staging
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release Staging Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "üß™ Deploying to STAGING environment..."
          gh release delete "$TAG" -y || true
          git push origin :refs/tags/"$TAG" || true
          gh release create "$TAG" build.zip --notes "$NOTE (Pre-production testing)"

  # === 4Ô∏è‚É£ Deploy to Production ===
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Download artifact
        uses: actions/download-artifact@v4
